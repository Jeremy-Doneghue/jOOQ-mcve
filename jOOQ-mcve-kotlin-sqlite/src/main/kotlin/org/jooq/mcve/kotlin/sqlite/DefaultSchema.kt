/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.kotlin.sqlite


import javax.annotation.processing.Generated

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl
import org.jooq.mcve.kotlin.sqlite.tables.BadTable
import org.jooq.mcve.kotlin.sqlite.tables.GoodTable


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.10"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>bad_table</code>.
     */
    val BAD_TABLE: BadTable get() = BadTable.BAD_TABLE

    /**
     * The table <code>good_table</code>.
     */
    val GOOD_TABLE: GoodTable get() = GoodTable.GOOD_TABLE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        BadTable.BAD_TABLE,
        GoodTable.GOOD_TABLE
    )
}
