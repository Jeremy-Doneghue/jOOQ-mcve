package org.jooq.mcve.test.kotlin.sqlite

import org.jooq.DSLContext
import org.jooq.impl.DSL
import org.jooq.mcve.kotlin.sqlite.tables.daos.BadTableDefaultDao
import org.jooq.mcve.kotlin.sqlite.tables.daos.GoodTableDefaultDao
import org.junit.After
import org.junit.Before
import org.junit.Test
import java.sql.DriverManager

class KotlinTest {

    var connection: java.sql.Connection? = null
    var ctx: DSLContext? = null

    @Before
    fun setup() {
        connection = DriverManager.getConnection("jdbc:sqlite:${System.getProperty("user.home")}/jooq-mcve-java.sqlite", "sa", "")
        ctx = DSL.using(connection)
    }

    @After
    fun after() {
        ctx = null
        connection!!.close()
        connection = null
    }

    fun ctx(): DSLContext = ctx!!

    @Test
    fun mcveTest() {
        GoodTableDefaultDao().fetchOneByCd("") // Is generated and compiles
        BadTableDefaultDao().fetchOneByCd("") // Is not generated and does not compile
        BadTableDefaultDao().fetchOneByE("") // Is not generated and does not compile
    }
}